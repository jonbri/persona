#!/usr/bin/perl -w

use strict;

use Getopt::Long;

my $home=$ENV{HOME};
my $configFile="$home/.whereami.properties";
my %places=();
my $a_quiet;
my $a_help;

sub help() {
    print STDERR <<'HELP';

whereami - Quickly change Git personas

Args:
  help      - see this message
  <no args> - print out current settings
  <place>   - change to <place> persona

Options:
  --quiet   - don't write to stdout

Full documentation: https://github.com/jonbri/whereami

HELP
}


sub readConfig {
    my $place;

    if (!-e $configFile) {
        print STDERR "configuration file not found: $configFile\n";
        exit 1;
    }

    open(FH,'<', $configFile) or die("Could not open config file\n");
    while (<FH>) {
        chomp;

        if (/^#/) {
            next;
        }

        # start of new place
        if (/^\w/) {
            $place = $_;
            $places{$place} = ();
        }

        # attributes of place
        if (/^\s\s\w/) {
            my $line = $_;
            $line =~ m/^\s\s(\S+)\s(.*)$/;
            $places{$place}{$1} = $2;
        }
    }
    close FH;
}

sub applyPlace($) {
    my ($place)=@_;

    if (!defined $places{$place}) {
        print STDERR "Place \"$place\" not found in configuration ($configFile).\n";
        exit 1;
    }

    my $name = $places{$place}{'name'};
    if (defined $name) {
        `git config --global user.name "${name}"`;
    }

    my $email = $places{$place}{'email'};
    if (defined $email) {
        `git config --global user.email $email`;
    }

    printSettings();
}

sub printSettings() {
    if (!defined $a_quiet) {
        print "user.name: ".`git config --get user.name`;
        print "user.email: ".`git config --get user.email`;
    }
}

sub getFirstNonOptionArg {
    my $arg = shift @ARGV;
    if (!defined $arg) {
        return;
    }
    return ($arg =~ /^-/) ? getFirstNonOptionArg() : $arg;
}

MAIN: {
    readConfig();

    GetOptions(
        'quiet' => \$a_quiet,
        'help' => \$a_help
    ) || (help() && exit 1);

    # show help if either arg or option is given
    my $firstArg=getFirstNonOptionArg();
    if (($firstArg && $firstArg eq "help") || defined $a_help) {
        help();
        exit 1;
    }

    # no args, just show settings
    if (!defined $firstArg) {
        printSettings();
        exit 0;
    }

    applyPlace($firstArg);
}
